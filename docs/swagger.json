{
    "swagger": "2.0",
    "info": {
        "description": "Griffin webserver that serves, employee .",
        "title": "Griffin Web Server API Documentation",
        "contact": {
            "name": "Sang Il Bae",
            "email": "baesangil0906@gmail.com"
        },
        "version": "Document 1.0"
    },
    "host": "localhost:10433",
    "basePath": "/",
    "paths": {
        "/api/v0/employType": {
            "get": {
                "description": "Whether the employer is full-time worker(permanent) or contract worker(freelance)",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Get Employ type.",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Enumerator (permanent or freelance)",
                        "name": "is_perma",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Single formed frequency, such as D(Day), W(Week)",
                        "name": "pay_freq",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/ent.EMPLOY_TYPE"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/api_base.CommonResponse"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/api_base.CommonResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/api_base.CommonResponse"
                        }
                    }
                }
            },
            "post": {
                "description": "Whether the employer is full-time worker(permanent) or contract worker(freelance)",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Add Employ type.",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Enumerator (permanent, freelance)",
                        "name": "is_perma",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Single formed frequency, such as D(Day), W(Week)",
                        "name": "pay_freq",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/api_base.CommonResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/api_base.CommonResponse"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/api_base.CommonResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/api_base.CommonResponse"
                        }
                    }
                }
            },
            "delete": {
                "description": "Not yet implemented",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Delete Employ type.",
                "responses": {
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/api_base.CommonResponse"
                        }
                    }
                }
            }
        },
        "/api/v0/employee": {
            "post": {
                "description": "Worker's information needed.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Post employee to the database.",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Full name, since crypto lovers don't use their original name",
                        "name": "name",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "permanent or freelance",
                        "name": "employ_type",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "D, W. M",
                        "name": "pay_freq",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Position ex: Backend engineer, Frontend engineer",
                        "name": "position",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Employee's information. His or her payment wallet address",
                        "name": "wallet",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Employee's information. His or her payment wallet address",
                        "name": "wallet_aztec",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "number",
                        "description": "Payroll amount in float",
                        "name": "payroll",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "ETH, MATIC or USDC. Capitalization required",
                        "name": "currency",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Employee's information. Corp or organization's em",
                        "name": "email",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Employee's information. Corp Gid or Organization Gid",
                        "name": "employer_gid",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Employee's information. When does he or she starts work. In YYYYMMDD",
                        "name": "work_start",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Employee's information. When does he or she ends work. Required if freelance. In YYYYMMDD",
                        "name": "work_end",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/api_base.CommonResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/api_base.CommonResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/api_base.CommonResponse"
                        }
                    }
                }
            },
            "delete": {
                "description": "Worker's information needed. His/Her Griffin ID (GID) and employer Griffin ID.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Delete employee from the database.",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Employee's griffin id (in uuid form)",
                        "name": "gid",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Employee's information. Corp Gid or Organization Gid",
                        "name": "employer_gid",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/api_base.CommonResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/api_base.CommonResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/api_base.CommonResponse"
                        }
                    }
                }
            }
        },
        "/api/v0/employee/multi": {
            "get": {
                "description": "Worker's information needed.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Query employee from the database.",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Employee's information. Corp Gid or Organization Gid",
                        "name": "employer_gid",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/ent.EMPLOYEE"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/api_base.CommonResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/api_base.CommonResponse"
                        }
                    }
                }
            }
        },
        "/api/v0/employee/single": {
            "get": {
                "description": "Worker's information needed. Worker is singled out with their griffin id and his employer id.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Query employee from the database.",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Employee's griffin id (in uuid form)",
                        "name": "gid",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Employee's information. Corp Gid or Organization Gid",
                        "name": "employer_gid",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/ent.EMPLOYEE"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/api_base.CommonResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/api_base.CommonResponse"
                        }
                    }
                }
            }
        },
        "/api/v0/employer": {
            "get": {
                "description": "Employer Griffin ID is in UUID form. Login will give you access to UUID.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Query employer from the database",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Employer's griffin id (in uuid form)",
                        "name": "gid",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/ent.EMPLOYER"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/api_base.CommonResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/api_base.CommonResponse"
                        }
                    }
                }
            },
            "put": {
                "description": "Not yet implemented",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Delete Employer.",
                "responses": {
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/api_base.CommonResponse"
                        }
                    }
                }
            },
            "post": {
                "description": "Employer information is registered by google form.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Post employer to the database",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Employer's user id",
                        "name": "id",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Employer's user password.",
                        "name": "pw",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Employer information (corp or organization name)",
                        "name": "corp_name",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Employer information (corp or organization email)",
                        "name": "corp_email",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Employer's wallet",
                        "name": "wallet",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Employer's aztec wallet",
                        "name": "wallet_aztec",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/api_base.CommonResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/api_base.CommonResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/api_base.CommonResponse"
                        }
                    }
                }
            },
            "delete": {
                "description": "Deleting the employer will delete all the employee's related to that employer",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Delete employer to the database",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Employer's griffin id (in uuid form)",
                        "name": "gid",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/api_base.CommonResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/api_base.CommonResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/api_base.CommonResponse"
                        }
                    }
                }
            }
        },
        "/api/v0/payment/employee": {
            "get": {
                "description": "Employee is identified by employer and employee Gid.\nGives you 1. scheduled payment, 2. scheduled and executed payment, and 3. oneoff payment",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Query payment log for employee.",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Employee's griffin id (in uuid form)",
                        "name": "gid",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Employer's griffin id (in uuid form)",
                        "name": "employer_gid",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/api_base.PaymentType"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/api_base.CommonResponse"
                        }
                    }
                }
            }
        },
        "/api/v0/payment/employer": {
            "get": {
                "description": "Gives you 1. scheduled payment, 2. scheduled and executed payment, and 3. oneoff payment\nfor whole employee cohort working under employer",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Query payment log for employer",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Employee's information. Corp Gid or Organization Gid",
                        "name": "employer_gid",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/api_base.PaymentType"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/api_base.CommonResponse"
                        }
                    }
                }
            }
        },
        "/api/v0/payment/execute": {
            "put": {
                "description": "Employee is identified by employer and employee Gid.\nAfter update recommend updating payment date for employee",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Create payment log for employee. Scheduled payment is executed",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Employee's griffin id (in uuid form)",
                        "name": "gid",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Employee's information. Corp Gid or Organization Gid",
                        "name": "employer_gid",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Payment schedule date. `gid` `employer_gid` and `schd_date` will make a unique key. Format should be YYYYMMDD",
                        "name": "schd_date",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Payment executed date. In format YYYYMMDD",
                        "name": "exec_date",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/api_base.CommonResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/api_base.CommonResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/api_base.CommonResponse"
                        }
                    }
                }
            }
        },
        "/api/v0/payment/future": {
            "get": {
                "description": "Gives you future scheduled payment. Future determined by interval",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Query future scheduled payment for an employer.",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Employee's information. Corp Gid or Organization Gid",
                        "name": "employer_gid",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "time interval. supports 2 length string. (O) 1d, 2m, 3y | (X) 10d, 20m, 30y",
                        "name": "interval",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/api_base.PaymentTime"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/api_base.CommonResponse"
                        }
                    }
                }
            }
        },
        "/api/v0/payment/miss": {
            "get": {
                "description": "Gives you missed scheduled payment. NO interval needed",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Query missed scheduled payment for an employer.",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Employee's information. Corp Gid or Organization Gid",
                        "name": "employer_gid",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/api_base.PaymentTime"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/api_base.CommonResponse"
                        }
                    }
                }
            }
        },
        "/api/v0/payment/oneoff": {
            "post": {
                "description": "Employee is identified by employer and employee Gid.\nAfter update recommend updating payment date for employee",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Create payment log for employee. Oneoff payment. Not scheduled.",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Employee's griffin id (in uuid form)",
                        "name": "gid",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Employer's information. Corp Gid or Organization Gid",
                        "name": "employer_gid",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Payment executed date. In format YYYYMMDD",
                        "name": "onof_date",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/api_base.CommonResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/api_base.CommonResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/api_base.CommonResponse"
                        }
                    }
                }
            }
        },
        "/api/v0/payment/past": {
            "get": {
                "description": "Gives you past executed payment. Future determined by interval",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Query past scheduled payment for an employer.",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Employee's information. Corp Gid or Organization Gid",
                        "name": "employer_gid",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "time interval. supports 2 length string. (O) 1d, 2m, 3y | (X) 10d, 20m, 30y",
                        "name": "interval",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/api_base.PaymentTime"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/api_base.CommonResponse"
                        }
                    }
                }
            }
        },
        "/api/v0/price": {
            "get": {
                "description": "ETH, MATIC data from binance.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Get all the price information that Griffin serves",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/price.PriceInformation"
                        }
                    },
                    "204": {
                        "description": "No Content",
                        "schema": {
                            "$ref": "#/definitions/api_base.CommonResponse"
                        }
                    }
                }
            }
        },
        "/api/v1/employType": {
            "get": {
                "description": "Whether the employer is full-time worker(permanent) or contract worker(freelance)",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Get Employ type.",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Enumerator (permanent or freelance)",
                        "name": "is_perma",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Single formed frequency, such as D(Day), W(Week)",
                        "name": "pay_freq",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/api_base.CommonResponseData-ent_EMPLOY_TYPE"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/api_base.CommonResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/api_base.CommonResponse"
                        }
                    }
                }
            },
            "post": {
                "description": "Whether the employer is full-time worker(permanent) or contract worker(freelance)",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Add Employ type.",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Enumerator (permanent, freelance)",
                        "name": "is_perma",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Single formed frequency, such as D(Day), W(Week)",
                        "name": "pay_freq",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/api_base.CommonResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/api_base.CommonResponse"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/api_base.CommonResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/api_base.CommonResponse"
                        }
                    }
                }
            },
            "delete": {
                "description": "Not yet implemented",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Delete Employ type.",
                "responses": {
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/api_base.CommonResponse"
                        }
                    }
                }
            }
        },
        "/api/v1/employee": {
            "post": {
                "description": "Worker's information needed.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Post employee to the database.",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Full name, since crypto lovers don't use their original name",
                        "name": "name",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "permanent or freelance",
                        "name": "employ_type",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "D, W. M",
                        "name": "pay_freq",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Position ex: Backend engineer, Frontend engineer",
                        "name": "position",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Employee's information. His or her payment wallet address",
                        "name": "wallet",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "number",
                        "description": "Payroll amount in float",
                        "name": "payroll",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "ETH, MATIC or USDC. Capitalization required",
                        "name": "currency",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Employee's information. Corp or organization's em",
                        "name": "email",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Employee's information. Corp Gid or Organization Gid",
                        "name": "employer_gid",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Employee's information. When does he or she starts work. In YYYYMMDD",
                        "name": "work_start",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Employee's information. When does he or she ends work. Required if freelance. In YYYYMMDD",
                        "name": "work_end",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/api_base.CommonResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/api_base.CommonResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/api_base.CommonResponse"
                        }
                    }
                }
            },
            "delete": {
                "description": "Worker's information needed. His/Her Griffin ID (GID) and employer Griffin ID.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Delete employee from the database.",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Employee's griffin id (in uuid form)",
                        "name": "gid",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Employee's information. Corp Gid or Organization Gid",
                        "name": "employer_gid",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/api_base.CommonResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/api_base.CommonResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/api_base.CommonResponse"
                        }
                    }
                }
            }
        },
        "/api/v1/employee/multi": {
            "get": {
                "description": "Worker's information needed.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Query employee from the database.",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Employee's information. Corp Gid or Organization Gid",
                        "name": "employer_gid",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/ent.EMPLOYEE"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/api_base.CommonResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/api_base.CommonResponse"
                        }
                    }
                }
            }
        },
        "/api/v1/employee/single": {
            "get": {
                "description": "Worker's information needed. Worker is singled out with their griffin id and his employer id.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Query employee from the database.",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Employee's griffin id (in uuid form)",
                        "name": "gid",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Employee's information. Corp Gid or Organization Gid",
                        "name": "employer_gid",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/ent.EMPLOYEE"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/api_base.CommonResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/api_base.CommonResponse"
                        }
                    }
                }
            }
        },
        "/api/v1/login/nonce": {
            "get": {
                "description": "Provide Nonce value that's needed for SIWE login",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Provide Nonce value. (Numbers used only once)",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/api_login.SignInWithEthNOnce"
                        }
                    }
                }
            }
        },
        "/api/v1/login/verify": {
            "post": {
                "description": "Using strict format string, in json, post login information and get valid Token.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Login using SIWE (Sign in with Ethereum)",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/api_base.CommonResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/api_base.CommonResponse"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/api_base.CommonResponse"
                        }
                    }
                }
            }
        },
        "/api/v1/payment/employer": {
            "get": {
                "description": "Gives you 1. scheduled payment, 2. scheduled and executed payment, and 3. oneoff payment\nfor whole employee cohort working under employer",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Query payment log for employer",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Employee's information. Corp Gid or Organization Gid",
                        "name": "employer_gid",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/api_base.PaymentType"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/api_base.CommonResponse"
                        }
                    }
                }
            }
        },
        "/api/v1/payment/future": {
            "get": {
                "description": "Gives you future scheduled payment. Future determined by interval",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Query future scheduled payment for an employer.",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Employee's information. Corp Gid or Organization Gid",
                        "name": "employer_gid",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "time interval. supports 2 length string. (O) 1d, 2m, 3y | (X) 10d, 20m, 30y",
                        "name": "interval",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/api_base.PaymentTimeV2"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/api_base.CommonResponse"
                        }
                    }
                }
            }
        },
        "/api/v1/payment/miss": {
            "get": {
                "description": "Gives you missed scheduled payment. NO interval needed",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Query missed scheduled payment for an employer.",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Employee's information. Corp Gid or Organization Gid",
                        "name": "employer_gid",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/api_base.PaymentTimeV2"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/api_base.CommonResponse"
                        }
                    }
                }
            }
        },
        "/api/v1/payment/past": {
            "get": {
                "description": "Gives you past executed payment. Future determined by interval",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Query past scheduled payment for an employer.",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Employee's information. Corp Gid or Organization Gid",
                        "name": "employer_gid",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "time interval. supports 2 length string. (O) 1d, 2m, 3y | (X) 10d, 20m, 30y",
                        "name": "interval",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/api_base.PaymentTimeV2"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/api_base.CommonResponse"
                        }
                    }
                }
            }
        },
        "/api/v1/payment/total": {
            "get": {
                "description": "Gives you missed scheduled payment. NO interval needed",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Query missed scheduled payment for an employer.",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Employee's information. Corp Gid or Organization Gid",
                        "name": "employer_gid",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/api_base.PaymentTime"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/api_base.CommonResponse"
                        }
                    }
                }
            }
        },
        "/api/v1/price": {
            "get": {
                "description": "ETH, MATIC and USDC data from binance.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Get price information that Griffin serves.",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/price.PriceInfoContainer"
                        }
                    },
                    "204": {
                        "description": "No Content",
                        "schema": {
                            "$ref": "#/definitions/api_base.CommonResponse"
                        }
                    }
                }
            }
        },
        "/ping": {
            "get": {
                "description": "Check 1) server is alive 2) database is alive by pinging it.\nDatabase ping using internal sql method in golang",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Server, DB ping test",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/api_base.CommonResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/api_base.CommonResponse"
                        }
                    }
                }
            }
        },
        "/version": {
            "get": {
                "description": "env file's parameter is GRIFFIN_WS_VERSION",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Read api-version file from environment file.",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/api_base.CommonResponse"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "api_base.CommonResponse": {
            "type": "object",
            "properties": {
                "message": {
                    "type": "string",
                    "example": "database (create / delete) (successful / failed)"
                },
                "status": {
                    "type": "boolean",
                    "example": true
                }
            }
        },
        "api_base.CommonResponseData-ent_EMPLOY_TYPE": {
            "type": "object",
            "properties": {
                "data": {
                    "$ref": "#/definitions/ent.EMPLOY_TYPE"
                },
                "message": {
                    "type": "string",
                    "example": "database(create/delete)"
                },
                "status": {
                    "type": "boolean",
                    "example": true
                }
            }
        },
        "api_base.PaymentTime": {
            "type": "object",
            "properties": {
                "future": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/ent.PAYMENT"
                    }
                },
                "missed": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/ent.PAYMENT"
                    }
                },
                "past": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/ent.PAYMENT"
                    }
                }
            }
        },
        "api_base.PaymentTimeV2": {
            "type": "object",
            "properties": {
                "future": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/util.Payment"
                    }
                },
                "missed": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/util.Payment"
                    }
                },
                "past": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/util.Payment"
                    }
                }
            }
        },
        "api_base.PaymentType": {
            "type": "object",
            "properties": {
                "executed": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/ent.PAYMENT"
                    }
                },
                "oneoff": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/ent.PAYMENT"
                    }
                },
                "scheduled": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/ent.PAYMENT"
                    }
                }
            }
        },
        "api_login.SignInWithEthNOnce": {
            "type": "object",
            "properties": {
                "nonce": {
                    "type": "string"
                },
                "status": {
                    "type": "boolean",
                    "example": true
                }
            }
        },
        "ent.CRYPTO_CURRENCY": {
            "type": "object",
            "properties": {
                "edges": {
                    "description": "Edges holds the relations/edges for other nodes in the graph.\nThe values are being populated by the CRYPTO_CURRENCYQuery when eager-loading is set.",
                    "$ref": "#/definitions/ent.CRYPTO_CURRENCYEdges"
                },
                "id": {
                    "description": "ID of the ent.",
                    "type": "integer"
                },
                "source_id": {
                    "description": "SourceID holds the value of the \"source_id\" field.",
                    "type": "integer"
                },
                "ticker": {
                    "description": "Ticker holds the value of the \"ticker\" field.",
                    "type": "string"
                }
            }
        },
        "ent.CRYPTO_CURRENCYEdges": {
            "type": "object",
            "properties": {
                "currency_from_source": {
                    "description": "CurrencyFromSource holds the value of the currency_from_source edge.",
                    "$ref": "#/definitions/ent.CRYPTO_PRC_SOURCE"
                },
                "currency_of_employee": {
                    "description": "CurrencyOfEmployee holds the value of the currency_of_employee edge.",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/ent.EMPLOYEE"
                    }
                },
                "currency_of_payment": {
                    "description": "CurrencyOfPayment holds the value of the currency_of_payment edge.",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/ent.PAYMENT"
                    }
                },
                "currency_of_payment_history": {
                    "description": "CurrencyOfPaymentHistory holds the value of the currency_of_payment_history edge.",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/ent.PAYMENT_HISTORY"
                    }
                }
            }
        },
        "ent.CRYPTO_PRC_SOURCE": {
            "type": "object",
            "properties": {
                "edges": {
                    "description": "Edges holds the relations/edges for other nodes in the graph.\nThe values are being populated by the CRYPTO_PRC_SOURCEQuery when eager-loading is set.",
                    "$ref": "#/definitions/ent.CRYPTO_PRC_SOURCEEdges"
                },
                "id": {
                    "description": "ID of the ent.",
                    "type": "integer"
                },
                "name": {
                    "description": "Name holds the value of the \"name\" field.",
                    "type": "string"
                }
            }
        },
        "ent.CRYPTO_PRC_SOURCEEdges": {
            "type": "object",
            "properties": {
                "source_of_currency": {
                    "description": "SourceOfCurrency holds the value of the source_of_currency edge.",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/ent.CRYPTO_CURRENCY"
                    }
                }
            }
        },
        "ent.EMPLOYEE": {
            "type": "object",
            "properties": {
                "created_at": {
                    "description": "CreatedAt holds the value of the \"created_at\" field.",
                    "type": "string"
                },
                "created_by": {
                    "description": "CreatedBy holds the value of the \"created_by\" field.",
                    "type": "string"
                },
                "crypto_currency_id": {
                    "description": "CryptoCurrencyID holds the value of the \"crypto_currency_id\" field.",
                    "type": "integer"
                },
                "edges": {
                    "description": "Edges holds the relations/edges for other nodes in the graph.\nThe values are being populated by the EMPLOYEEQuery when eager-loading is set.",
                    "$ref": "#/definitions/ent.EMPLOYEEEdges"
                },
                "email": {
                    "description": "Email holds the value of the \"email\" field.",
                    "type": "string"
                },
                "employ_type_id": {
                    "description": "EmployTypeID holds the value of the \"employ_type_id\" field.",
                    "type": "integer"
                },
                "employer_id": {
                    "description": "EmployerID holds the value of the \"employer_id\" field.",
                    "type": "integer"
                },
                "gid": {
                    "description": "Gid holds the value of the \"gid\" field.",
                    "type": "string"
                },
                "id": {
                    "description": "ID of the ent.",
                    "type": "integer"
                },
                "name": {
                    "description": "Name holds the value of the \"name\" field.",
                    "type": "string"
                },
                "payday": {
                    "description": "Payday holds the value of the \"payday\" field.",
                    "type": "string"
                },
                "payroll": {
                    "description": "Payroll holds the value of the \"payroll\" field.",
                    "type": "number"
                },
                "position": {
                    "description": "Position holds the value of the \"position\" field.",
                    "type": "string"
                },
                "updated_at": {
                    "description": "UpdatedAt holds the value of the \"updated_at\" field.",
                    "type": "string"
                },
                "updated_by": {
                    "description": "UpdatedBy holds the value of the \"updated_by\" field.",
                    "type": "string"
                },
                "wallet": {
                    "description": "Wallet holds the value of the \"wallet\" field.",
                    "type": "string"
                },
                "wallet_aztec": {
                    "description": "WalletAztec holds the value of the \"wallet_aztec\" field.",
                    "type": "string"
                },
                "work_ends": {
                    "description": "WorkEnds holds the value of the \"work_ends\" field.",
                    "type": "string"
                },
                "work_start": {
                    "description": "WorkStart holds the value of the \"work_start\" field.",
                    "type": "string"
                }
            }
        },
        "ent.EMPLOYEEEdges": {
            "type": "object",
            "properties": {
                "employee_from_currency": {
                    "description": "EmployeeFromCurrency holds the value of the employee_from_currency edge.",
                    "$ref": "#/definitions/ent.CRYPTO_CURRENCY"
                },
                "employee_from_employ_type": {
                    "description": "EmployeeFromEmployType holds the value of the employee_from_employ_type edge.",
                    "$ref": "#/definitions/ent.EMPLOY_TYPE"
                },
                "employee_from_employer": {
                    "description": "EmployeeFromEmployer holds the value of the employee_from_employer edge.",
                    "$ref": "#/definitions/ent.EMPLOYER"
                },
                "employee_of_payment": {
                    "description": "EmployeeOfPayment holds the value of the employee_of_payment edge.",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/ent.PAYMENT"
                    }
                },
                "employee_of_payment_history": {
                    "description": "EmployeeOfPaymentHistory holds the value of the employee_of_payment_history edge.",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/ent.PAYMENT_HISTORY"
                    }
                }
            }
        },
        "ent.EMPLOYER": {
            "type": "object",
            "properties": {
                "corp_email": {
                    "description": "CorpEmail holds the value of the \"corp_email\" field.",
                    "type": "string"
                },
                "corp_name": {
                    "description": "CorpName holds the value of the \"corp_name\" field.",
                    "type": "string"
                },
                "created_at": {
                    "description": "CreatedAt holds the value of the \"created_at\" field.",
                    "type": "string"
                },
                "created_by": {
                    "description": "CreatedBy holds the value of the \"created_by\" field.",
                    "type": "string"
                },
                "edges": {
                    "description": "Edges holds the relations/edges for other nodes in the graph.\nThe values are being populated by the EMPLOYERQuery when eager-loading is set.",
                    "$ref": "#/definitions/ent.EMPLOYEREdges"
                },
                "gid": {
                    "description": "Gid holds the value of the \"gid\" field.",
                    "type": "string"
                },
                "id": {
                    "description": "ID of the ent.",
                    "type": "integer"
                },
                "password": {
                    "description": "Password holds the value of the \"password\" field.",
                    "type": "string"
                },
                "updated_at": {
                    "description": "UpdatedAt holds the value of the \"updated_at\" field.",
                    "type": "string"
                },
                "updated_by": {
                    "description": "UpdatedBy holds the value of the \"updated_by\" field.",
                    "type": "string"
                },
                "username": {
                    "description": "Username holds the value of the \"username\" field.",
                    "type": "string"
                },
                "wallet": {
                    "description": "Wallet holds the value of the \"wallet\" field.",
                    "type": "string"
                },
                "wallet_aztec": {
                    "description": "WalletAztec holds the value of the \"wallet_aztec\" field.",
                    "type": "string"
                }
            }
        },
        "ent.EMPLOYEREdges": {
            "type": "object",
            "properties": {
                "employer_of_employee": {
                    "description": "EmployerOfEmployee holds the value of the employer_of_employee edge.",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/ent.EMPLOYEE"
                    }
                },
                "employer_of_payment": {
                    "description": "EmployerOfPayment holds the value of the employer_of_payment edge.",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/ent.PAYMENT"
                    }
                },
                "employer_of_payment_history": {
                    "description": "EmployerOfPaymentHistory holds the value of the employer_of_payment_history edge.",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/ent.PAYMENT_HISTORY"
                    }
                }
            }
        },
        "ent.EMPLOY_TYPE": {
            "type": "object",
            "properties": {
                "edges": {
                    "description": "Edges holds the relations/edges for other nodes in the graph.\nThe values are being populated by the EMPLOY_TYPEQuery when eager-loading is set.",
                    "$ref": "#/definitions/ent.EMPLOY_TYPEEdges"
                },
                "id": {
                    "description": "ID of the ent.",
                    "type": "integer"
                },
                "is_permanent": {
                    "description": "IsPermanent holds the value of the \"is_permanent\" field.",
                    "type": "string"
                },
                "pay_freq": {
                    "description": "PayFreq holds the value of the \"pay_freq\" field.",
                    "type": "string"
                }
            }
        },
        "ent.EMPLOY_TYPEEdges": {
            "type": "object",
            "properties": {
                "employ_type_of_employee": {
                    "description": "EmployTypeOfEmployee holds the value of the employ_type_of_employee edge.",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/ent.EMPLOYEE"
                    }
                }
            }
        },
        "ent.PAYMENT": {
            "type": "object",
            "properties": {
                "crypto_currency_id": {
                    "description": "CryptoCurrencyID holds the value of the \"crypto_currency_id\" field.",
                    "type": "integer"
                },
                "edges": {
                    "description": "Edges holds the relations/edges for other nodes in the graph.\nThe values are being populated by the PAYMENTQuery when eager-loading is set.",
                    "$ref": "#/definitions/ent.PAYMENTEdges"
                },
                "employee_id": {
                    "description": "EmployeeID holds the value of the \"employee_id\" field.",
                    "type": "integer"
                },
                "employer_id": {
                    "description": "EmployerID holds the value of the \"employer_id\" field.",
                    "type": "integer"
                },
                "id": {
                    "description": "ID of the ent.",
                    "type": "integer"
                },
                "payment_amount": {
                    "description": "PaymentAmount holds the value of the \"payment_amount\" field.",
                    "type": "number"
                },
                "payment_executed": {
                    "description": "PaymentExecuted holds the value of the \"payment_executed\" field.",
                    "type": "string"
                },
                "payment_scheduled": {
                    "description": "PaymentScheduled holds the value of the \"payment_scheduled\" field.",
                    "type": "string"
                }
            }
        },
        "ent.PAYMENTEdges": {
            "type": "object",
            "properties": {
                "payment_from_currency": {
                    "description": "PaymentFromCurrency holds the value of the payment_from_currency edge.",
                    "$ref": "#/definitions/ent.CRYPTO_CURRENCY"
                },
                "payment_from_employee": {
                    "description": "PaymentFromEmployee holds the value of the payment_from_employee edge.",
                    "$ref": "#/definitions/ent.EMPLOYEE"
                },
                "payment_from_employer": {
                    "description": "PaymentFromEmployer holds the value of the payment_from_employer edge.",
                    "$ref": "#/definitions/ent.EMPLOYER"
                }
            }
        },
        "ent.PAYMENT_HISTORY": {
            "type": "object",
            "properties": {
                "amount": {
                    "description": "Amount holds the value of the \"amount\" field.",
                    "type": "number"
                },
                "created_at": {
                    "description": "CreatedAt holds the value of the \"created_at\" field.",
                    "type": "string"
                },
                "created_by": {
                    "description": "CreatedBy holds the value of the \"created_by\" field.",
                    "type": "string"
                },
                "currency_id": {
                    "description": "CurrencyID holds the value of the \"currency_id\" field.",
                    "type": "integer"
                },
                "edges": {
                    "description": "Edges holds the relations/edges for other nodes in the graph.\nThe values are being populated by the PAYMENT_HISTORYQuery when eager-loading is set.",
                    "$ref": "#/definitions/ent.PAYMENT_HISTORYEdges"
                },
                "employee_id": {
                    "description": "EmployeeID holds the value of the \"employee_id\" field.",
                    "type": "integer"
                },
                "employer_id": {
                    "description": "EmployerID holds the value of the \"employer_id\" field.",
                    "type": "integer"
                },
                "id": {
                    "description": "ID of the ent.",
                    "type": "integer"
                }
            }
        },
        "ent.PAYMENT_HISTORYEdges": {
            "type": "object",
            "properties": {
                "payment_history_from_currency_id": {
                    "description": "PaymentHistoryFromCurrencyID holds the value of the payment_history_from_currency_id edge.",
                    "$ref": "#/definitions/ent.CRYPTO_CURRENCY"
                },
                "payment_history_from_employee": {
                    "description": "PaymentHistoryFromEmployee holds the value of the payment_history_from_employee edge.",
                    "$ref": "#/definitions/ent.EMPLOYEE"
                },
                "payment_history_from_employer": {
                    "description": "PaymentHistoryFromEmployer holds the value of the payment_history_from_employer edge.",
                    "$ref": "#/definitions/ent.EMPLOYER"
                }
            }
        },
        "price.Dim": {
            "type": "object",
            "properties": {
                "coll": {
                    "type": "integer",
                    "example": 2
                },
                "rowl": {
                    "type": "integer",
                    "example": 1
                }
            }
        },
        "price.PriceInfoContainer": {
            "type": "object",
            "properties": {
                "data": {
                    "$ref": "#/definitions/price.PriceInformationV2"
                },
                "dimension": {
                    "$ref": "#/definitions/price.Dim"
                },
                "meta": {
                    "type": "string",
                    "example": "some meta information"
                }
            }
        },
        "price.PriceInformation": {
            "type": "object",
            "properties": {
                "ethusdt": {
                    "type": "number"
                },
                "maticusdt": {
                    "type": "number"
                },
                "usdcusdt": {
                    "type": "number"
                }
            }
        },
        "price.PriceInformationV2": {
            "type": "object",
            "properties": {
                "eth": {
                    "type": "number",
                    "example": 1605.1
                },
                "matic": {
                    "type": "number",
                    "example": 0.9985
                },
                "usdc": {
                    "type": "number",
                    "example": 0.9999
                }
            }
        },
        "util.Payment": {
            "type": "object",
            "properties": {
                "currency": {
                    "type": "string"
                },
                "gid": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "payday_execute": {
                    "type": "string"
                },
                "payday_schedule": {
                    "type": "string"
                },
                "payroll": {
                    "type": "number"
                },
                "position": {
                    "type": "string"
                }
            }
        }
    }
}