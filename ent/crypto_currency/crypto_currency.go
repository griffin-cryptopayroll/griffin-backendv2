// Code generated by ent, DO NOT EDIT.

package crypto_currency

const (
	// Label holds the string label denoting the crypto_currency type in the database.
	Label = "crypto_currency"
	// FieldID holds the string denoting the id field in the database.
	FieldID = "id"
	// FieldTicker holds the string denoting the ticker field in the database.
	FieldTicker = "ticker"
	// FieldSource holds the string denoting the source field in the database.
	FieldSource = "source"
	// EdgeCryptoPrcSource holds the string denoting the crypto_prc_source edge name in mutations.
	EdgeCryptoPrcSource = "crypto_prc_source"
	// Table holds the table name of the crypto_currency in the database.
	Table = "crypto_currenc_ys"
	// CryptoPrcSourceTable is the table that holds the crypto_prc_source relation/edge.
	CryptoPrcSourceTable = "crypto_prc_sourc_es"
	// CryptoPrcSourceInverseTable is the table name for the CRYPTO_PRC_SOURCE entity.
	// It exists in this package in order to avoid circular dependency with the "crypto_prc_source" package.
	CryptoPrcSourceInverseTable = "crypto_prc_sourc_es"
	// CryptoPrcSourceColumn is the table column denoting the crypto_prc_source relation/edge.
	CryptoPrcSourceColumn = "crypto_currency_crypto_prc_source"
)

// Columns holds all SQL columns for crypto_currency fields.
var Columns = []string{
	FieldID,
	FieldTicker,
	FieldSource,
}

// ValidColumn reports if the column name is valid (part of the table columns).
func ValidColumn(column string) bool {
	for i := range Columns {
		if column == Columns[i] {
			return true
		}
	}
	return false
}
