// Code generated by ent, DO NOT EDIT.

package crypto_prc_source

const (
	// Label holds the string label denoting the crypto_prc_source type in the database.
	Label = "crypto_prc_source"
	// FieldID holds the string denoting the id field in the database.
	FieldID = "id"
	// FieldName holds the string denoting the name field in the database.
	FieldName = "name"
	// EdgePriceOf holds the string denoting the price_of edge name in mutations.
	EdgePriceOf = "price_of"
	// Table holds the table name of the crypto_prc_source in the database.
	Table = "crypto_prc_source"
	// PriceOfTable is the table that holds the price_of relation/edge.
	PriceOfTable = "crypto_currency"
	// PriceOfInverseTable is the table name for the CRYPTO_CURRENCY entity.
	// It exists in this package in order to avoid circular dependency with the "crypto_currency" package.
	PriceOfInverseTable = "crypto_currency"
	// PriceOfColumn is the table column denoting the price_of relation/edge.
	PriceOfColumn = "crypto_prc_source_price_of"
)

// Columns holds all SQL columns for crypto_prc_source fields.
var Columns = []string{
	FieldID,
	FieldName,
}

// ValidColumn reports if the column name is valid (part of the table columns).
func ValidColumn(column string) bool {
	for i := range Columns {
		if column == Columns[i] {
			return true
		}
	}
	return false
}
