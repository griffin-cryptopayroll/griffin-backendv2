// Code generated by ent, DO NOT EDIT.

package migrate

import (
	"entgo.io/ent/dialect/sql/schema"
	"entgo.io/ent/schema/field"
)

var (
	// CryptoCurrencYsColumns holds the columns for the "crypto_currenc_ys" table.
	CryptoCurrencYsColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true, SchemaType: map[string]string{"mysql": "INT"}},
		{Name: "ticker", Type: field.TypeString, SchemaType: map[string]string{"mysql": "VARCHAR(10)"}},
		{Name: "source", Type: field.TypeInt, SchemaType: map[string]string{"mysql": "INT"}},
	}
	// CryptoCurrencYsTable holds the schema information for the "crypto_currenc_ys" table.
	CryptoCurrencYsTable = &schema.Table{
		Name:       "crypto_currenc_ys",
		Columns:    CryptoCurrencYsColumns,
		PrimaryKey: []*schema.Column{CryptoCurrencYsColumns[0]},
	}
	// CryptoPrcSourcEsColumns holds the columns for the "crypto_prc_sourc_es" table.
	CryptoPrcSourcEsColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true, SchemaType: map[string]string{"mysql": "INT"}},
		{Name: "name", Type: field.TypeString, SchemaType: map[string]string{"mysql": "VARCHAR(45)"}},
		{Name: "crypto_currency_crypto_prc_source", Type: field.TypeInt, Nullable: true, SchemaType: map[string]string{"mysql": "INT"}},
	}
	// CryptoPrcSourcEsTable holds the schema information for the "crypto_prc_sourc_es" table.
	CryptoPrcSourcEsTable = &schema.Table{
		Name:       "crypto_prc_sourc_es",
		Columns:    CryptoPrcSourcEsColumns,
		PrimaryKey: []*schema.Column{CryptoPrcSourcEsColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "crypto_prc_sourc_es_crypto_currenc_ys_crypto_prc_source",
				Columns:    []*schema.Column{CryptoPrcSourcEsColumns[2]},
				RefColumns: []*schema.Column{CryptoCurrencYsColumns[0]},
				OnDelete:   schema.SetNull,
			},
		},
	}
	// EmployeEsColumns holds the columns for the "employe_es" table.
	EmployeEsColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
	}
	// EmployeEsTable holds the schema information for the "employe_es" table.
	EmployeEsTable = &schema.Table{
		Name:       "employe_es",
		Columns:    EmployeEsColumns,
		PrimaryKey: []*schema.Column{EmployeEsColumns[0]},
	}
	// EmployerUserInfOsColumns holds the columns for the "employer_user_inf_os" table.
	EmployerUserInfOsColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
	}
	// EmployerUserInfOsTable holds the schema information for the "employer_user_inf_os" table.
	EmployerUserInfOsTable = &schema.Table{
		Name:       "employer_user_inf_os",
		Columns:    EmployerUserInfOsColumns,
		PrimaryKey: []*schema.Column{EmployerUserInfOsColumns[0]},
	}
	// EmployTypEsColumns holds the columns for the "employ_typ_es" table.
	EmployTypEsColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
	}
	// EmployTypEsTable holds the schema information for the "employ_typ_es" table.
	EmployTypEsTable = &schema.Table{
		Name:       "employ_typ_es",
		Columns:    EmployTypEsColumns,
		PrimaryKey: []*schema.Column{EmployTypEsColumns[0]},
	}
	// PaymentHistorYsColumns holds the columns for the "payment_histor_ys" table.
	PaymentHistorYsColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
	}
	// PaymentHistorYsTable holds the schema information for the "payment_histor_ys" table.
	PaymentHistorYsTable = &schema.Table{
		Name:       "payment_histor_ys",
		Columns:    PaymentHistorYsColumns,
		PrimaryKey: []*schema.Column{PaymentHistorYsColumns[0]},
	}
	// Tables holds all the tables in the schema.
	Tables = []*schema.Table{
		CryptoCurrencYsTable,
		CryptoPrcSourcEsTable,
		EmployeEsTable,
		EmployerUserInfOsTable,
		EmployTypEsTable,
		PaymentHistorYsTable,
	}
)

func init() {
	CryptoPrcSourcEsTable.ForeignKeys[0].RefTable = CryptoCurrencYsTable
}
